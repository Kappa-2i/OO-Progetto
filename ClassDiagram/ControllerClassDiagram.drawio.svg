<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="547" height="2337" viewBox="-0.5 -0.5 547 2337" content="&lt;mxfile host=&quot;Electron&quot; modified=&quot;2024-03-08T16:23:53.509Z&quot; agent=&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/22.0.1 Chrome/114.0.5735.289 Electron/25.8.4 Safari/537.36&quot; etag=&quot;MTE5u9l-ALCCYqCww-eR&quot; version=&quot;22.0.1&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;xtG6eiPM2toVsLjt8Pww&quot; name=&quot;Pagina-1&quot;&gt;1RnZciMn8GtUJT8oZUm2kzzq2LVdtZt1rbLJM5pBI8rMMGHQtV+fZjgGJA0Gl/OQB1tMQ9MHfUEPpovy+MhRvf3KckwHk9v8OJguB5PJeHp/Bz8SctKQ24d7BSk4yTWsA6zIT2wWauiO5LjxFgrGqCC1D8xYVeFMeDDEOTv4yzaM+lRrVGiKtx1glSGKL5b9TXKxVdDfJr928CdMiq2hPH74Xc2sUfZacLarNL2KVVjNlMhso0k2W5SzgwOafhpMF5wxoUblcYGp1KvRmML73DNrWea4EjEIFRybZmWP6E5LPpg8UECf15JDcdIKefhnJ9mal4gXpBpMZ7f10X6OBKsBdNeCBD6KEaKkkKsyYAVzgHY7wKjQvy2dtQEsWCU4oxTW6ylgfX2+HGD1OWzLJa/GhgyhcT/Nt2SDafOnhKKkwqOtPvDZ+JeHqyKNpKVxVOIXkr3OUfU6yzKwBIkCMw5Azv9F8OHxx7NVA3d3yaQeMkFYtZx9U+gLD/QGVqNwZpyj0xfSCFiFyloKojRt1lm4fyT8QqIVnOePWu2qxkH+CfjlYouzV5wrnOcSPOY5ayle5bwSbMG4NF1sRXY01itzg+ge5ahChFm8F1IUJ4nci9XK9MRKrBDkKCjPuuMkrFr31CN0KziqGqSOzDmVEIU/O5QYCrXRRZhvq7Joi3D5aHd2AEFdWg85F7j7fts/EBeocw3E896jVir+Cbt2huWwGjaRfhaD7CHX7ztz6KMi9d6ytJGx0li+gQQpcVwzrgkt2W4NIe1+PrhfhmQCbXV6e9ONl5higaO8uPV6VGVQDMQs14ZgDM933SbIWIPlMeA8FGQDRL8wFejhux0Gabk++pGeqY1kiZhnJ70GKbU7g+wo4iIqxzkEU4Jo8wzRS0duwUlV9LqUYxZhtfe7xf8hTQ8mcymvTE+LTktDo5yFVdSNkm7PyBV9qF12dcFR3vrUMBqpwcKxlWaYak8RJFCeW1fyJMtVkEiTckMovb5diswL3yTj9VVgsbqwvOFNn+1dkpYLnMgwP+nBUP/efFROt/x+hXRzmp9CSktX4Pc22A/dOB+BSKoGgoaROMxHKk9bdjBJZBixfg/rtBAJcsvT+wOi9qzKVzteyYR5Sjagc+O7CUfEDq+rqYdhM4mvqt1zcYzLl2cO112Meo26sOZwE5P9FVLtVV1aizH+f1myDTV/kVZyXtDEUM3byqNXQSFUSIsbwkucv6CmOTAbnK/Y9zqs59bELwrTGPZlxJNpQf6L1fH79Hs1PHbDyCM6q9+jTogdqnfkv12dI/9gnXGsqlyLSjTGs+t5rLSCCUQhsIstPX3HGSZ7nA+95HBhXCbbBt3KpIh4IcD5jeZMTOqreV1XOs9GsRHeu/SkGZaTut3zNjEuVK0b465y76jjE1jqOE4cr3ILZ4SEC8HV7S+LnY8i1N2CEl1nBXpSbz9RIRAwzNtKoo+DKrq74BviRz9e2Hjp8NJbfveWfekVvnOQ/0Gt78alFfaj6ftiksNNWlTy9PrBVXVzPZS8I3W02SpeLvmkb58Jksolj88UPbYcmgvO1et4V2M4BWpiZRorinrwTZDAPq8mVTGSx9Wu/LZxRUow3cYLGWmxIrpy0NhpNazj/9GpBm7wF2jpV8brF10XyX+paftS9sllsocbCskQnal+zrJt9Mx1d2dJ8UZiMVi1oW0nSz4UAGQDwUj39MZ3+vszKgmV7cAnTPdY7goTW1FSuQiGbc9MtguWt/Ble2PyI2MlyfSYojWmc9tkAxUxDlNtmw3QBGevtmM3tiK5TTHdJ5Oi4aMD0k2yRwx2K/gJlujZkWnY6WbmyDQpD11n8P5Ow7ZOV3AynWoo0u3Iwm7e9eVgoFtz5rNrAbZzTo91+ulf&lt;/diagram&gt;&lt;/mxfile&gt;"><defs><filter id="dropShadow"><feGaussianBlur in="SourceAlpha" stdDeviation="1.7" result="blur"/><feOffset in="blur" dx="3" dy="3" result="offsetBlur"/><feFlood flood-color="#3D4574" flood-opacity="0.4" result="offsetColor"/><feComposite in="offsetColor" in2="offsetBlur" operator="in" result="offsetBlur"/><feBlend in="SourceGraphic" in2="offsetBlur"/></filter></defs><g filter="url(#dropShadow)"><rect x="0" y="0" width="540" height="2330" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 542px; height: 2330px; padding-top: 0px; margin-left: 0px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 540px; height: 2330px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Controller</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- framePickBankAccount: BankAccountPickViewGUI<br />- collectionDAO: CollectionDAO<br />- collections: ArrayList&lt;Collection&gt;<br />- frameSignUp: SignUpViewGUI<br />- iconChecked: ImageIcon<br />- contoCorrenteDAO: BankAccountDAO<br />- salvadanaioDAO: PiggyBankDAO<br />- frameHome: HomeViewGUI<br />- bankAccounts: ArrayList&lt;BankAccount&gt;<br />- transactionsCollection: ArrayList&lt;Transaction&gt;<br />- piggyBanks: ArrayList&lt;PiggyBank&gt;<br />- frameTransaction: TransactionViewGUI<br />- framePickCollection: CollectionPickViewGUI<br />- cartaDAO: CardDAO<br />- transazioneDAO: TransactionDAO<br />- frameCollection: CollectionViewGUI<br />- account: Account<br />- frameBankTransfer: BankTransferViewGUI<br />- report: Double[]<br />- frameCard: CardViewGUI<br />- iconDelete: ImageIcon<br />- iconCancel: ImageIcon<br />- framePiggyBank: PiggyBanksViewGUI<br />- selectedBankAccount: BankAccount<br />- frameLogin: LoginViewGUI<br />- transactions: ArrayList&lt;Transaction&gt;<br />- accountDao: AccountDAO<br />- iconAlert: ImageIcon<br />- credentialsIban: String<br />- card: Card<br />- selectedCollection: Collection</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ checkCredentials(String, String): void<br />+ upgradeCard(String): void<br />+ setTransactions(ArrayList&lt;Transaction&gt;): void<br />+ addPiggyBank(String, double, String): void<br />+ fillPiggyBank(String, String): void<br />+ setCredentialsIban(String): void<br />+ getSelectedCollection(): Collection<br />+ selectBankAccountByAccount(Account): ArrayList&lt;BankAccount&gt;<br />+ getMoneyByPiggyBank(String, String, String): void<br />+ setReport(Double[]): void<br />+ insertAccount(String, String, String, String): void<br />+ showCardView(): void<br />+ viewReport(String): void<br />+ selectNameAndSurnameByIban(String): void<br />+ getCredentialsIban(): String<br />+ getCollections(): ArrayList&lt;Collection&gt;<br />+ insertBankAccount(String): Boolean<br />+ getReport(): Double[]<br />+ pickCollectionByIban(): void<br />+ framePickCollection(Boolean): void<br />+ showBankTransferView(): void<br />+ deleteBankAccount(String): void<br />+ confirmedPassword(String, String): boolean<br />+ showCollectionPickView(): void<br />+ setCard(Card): void<br />+ frameCollection(Boolean): void<br />+ setSelectedCollection(Collection): void<br />+ showTransactionView(): void<br />+ downgradeCard(String): void<br />+ updateBankAccount(BankAccount): void<br />+ frameBankTransfer(Boolean): void<br />+ showPickBankAccountView(): void<br />+ totalMonthlyReceived(BankAccount, String): double<br />+ framePiggyBank(Boolean): void<br />+ getAccount(): Account<br />+ deletePiggyBank(String): void<br />+ showCollectionView(Collection): void<br />+ getSelectedBankAccount(): BankAccount<br />+ sendBankTransfer(String, String, String, String, String, String, String, String): void<br />+ getTransactions(): ArrayList&lt;Transaction&gt;<br />+ getTransactionsCollection(): ArrayList&lt;Transaction&gt;<br />+ frameLogin(Boolean): void<br />+ showSingUpView(): void<br />+ showHomeView(BankAccount): void<br />+ getPiggyBanks(): ArrayList&lt;PiggyBank&gt;<br />+ setBankAccounts(ArrayList&lt;BankAccount&gt;): void<br />+ setTransactionsCollection(ArrayList&lt;Transaction&gt;): void<br />+ totalMonthlySent(BankAccount, String): double<br />+ frameTransaction(Boolean): void<br />+ getBankAccounts(): ArrayList&lt;BankAccount&gt;<br />+ setSelectedBankAccount(BankAccount): void<br />+ frameCard(Boolean): void<br />+ backLoginView(): void<br />+ framePickBankAccount(Boolean): void<br />+ getCard(): Card<br />+ setCollections(ArrayList&lt;Collection&gt;): void<br />+ frameSignUp(Boolean): void<br />+ frameHome(Boolean): void<br />+ selectSumOfCollections(String): double<br />+ setPiggyBanks(ArrayList&lt;PiggyBank&gt;): void<br />+ showPiggyBankView(): void<br />+ deleteCollection(String): void<br />+ addCollection(String, String): void<br />+ setAccount(Account): void</p></div></div></div></foreignObject><text x="0" y="14" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">Controller...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>