<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="460" height="2327" viewBox="-0.5 -0.5 460 2327" content="&lt;mxfile host=&quot;Electron&quot; modified=&quot;2024-03-08T21:45:25.188Z&quot; agent=&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/22.0.1 Chrome/114.0.5735.289 Electron/25.8.4 Safari/537.36&quot; version=&quot;22.0.1&quot; etag=&quot;LTzC0rujf95TxfM0iZWU&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;MzCeQSE1ln0q02jnAxE7&quot; name=&quot;Pagina-1&quot;&gt;zVlLk+MmEP41rpo9ODW2Z5zkaNk7j6rd7NY6m5yxhGVqkFAQfu0hvz2NeAjJlgTOpCqHGaOGr7tpmqahR7NldnrmqNh9Zgmmo+l9chrNVqPpdDJ7fIAfSTlryv38UVFSThJNqwlr8gObgZq6JwkuGwMFY1SQokmMWZ7jWDRoiHN2bA7bMtqUWqBUS7yvCesYUXwx7E+SiJ2i/jL9uaa/YJLujOTJ/FfVs0HxW8rZPtfycpZj1ZMhw0aLLHcoYUeHNPs4mi05Y0K1stMSU2lXYzGFe+rotSpznAsfQA7LplU5ILrXMx9N5xTgUSE1FGdtkPlfe6lWlCGeknw0W9wXJ/s5FqwA0kNFEvgkxoiSVI6KQRXMgVpzgFaqfys5G0NYslxwRimM112g+qY9HGhFm7bjUlfjQ0bQxJX51MYMTQ+6zZ+aFyU5Hu/0mi8mP82vzmos/S+OYf3lKPhY6A8zW+7o4gxeIdYYv1p86YRsUP6mh5UaxDk6fyKlFIOyQmorB0f1QNvRtH2bdYx4olguZatnmEBSRTu0T99YLmosCMtrSIM0DOyfZ83Nd5rgamzJuNwp2CrlmKtXK44TwBFEy1dYCoVdC07ytBOz5SjDkv/vHOXlVm4JI9FQ/iD4+Pz9tZ/FsrE+fpDaOC3Te8FfWIYVULa8IJ+Y2kPwXTW9QF9J/Ob6a3tFZL83o+45B7BJ07OUrzjYz9ILvYbw973QrlG1vWCVLyBHcYfQx+BvGdXBqRcQPLXpXjM4ol7jakt0A5Yoj+HoDkHscPyGkxDIClMssA9CGqKwlu7d8/X6+G15jgtmbLNi+w0E/sdo9LjqBJSIHlCCckSYjRBWaF98KLH0NZz0efMguNuDO6Gi9pV+07le5mc8l3Vbs3cW8gMAdUh2uDgm/5/nAKNpJA/2xFnEO3M+LO1Z8UHN8MDI9XPWcrFO12CSKB8OZijzUxuV7/wwsdzzy/rYu3k2sO+3hGc4+YrK8sh40s1pA9k+Rte9XTFLqrDibKq7EFUU+mKFQsDthfHEsmOecpRUZ3kQcksove4MQVzaqchdpEwdAK9UvwFWWzscLNOPG2CVr9+Aa+UjN3L4VzOu1zocq5KOG4BOxA1Dp1gYW30YvvpYjGPj0gLf4zpjJVTO+mHgVlOPru8cA+oE3Tpq/s3bg5HRc3+w0M9wMp6jc18ICA8HwLfObQdmHJJzWe7fqsTLcB5MvSxufZlGGSZDidQFD2cbGkfoz6csB2c7DFknLOO5KuFSz3eURfISbgfNs7LLd8L9SHHvPI2jweO8aITL6OzujgHZKml2ZEdno4T+ff/AomT+BhFzkSfrPc/lqaqUDjGbYrPeZ1+2buRpsDCpXg+TPGmc6P6LG9r2nZW4vgDDuMZ5ELpe3lKqM0H+80c4qxN4IPjLaJ0NgSZ34nhYAPeWoGO5G8S9sdfiudMO5uPEyrrpzaUR10OD7E1SHH3/I3k7dmw/KPoGUICaB8UQyMWz2k3gChi8hsDCvEje4EeAbmX4gerbrRSIW8OOVq+BAaDWM6AnUjCBKCSNYkfP33CMyQEnd43YeRHXB48al+caN7fwLfz2RYKal/jgtdwXt12nD2BJHdA6Yc2XpqpoZ9+LpgdIeEiM6EIVu1ZVFSzSpa8VxVuJYjBqS6syn7y/A2UL1tMFz8mD/n5CGaGyVvqC6QFLrtCxExmVg6BZFRTlq+vqHr5s4VB+xCwjsW5TtME0shVI2FOMQ1dVgwSY4OzNljMndkpuxVAXEeXU8Mkh6QriM4YtJ/gZhuje8XyqILrSO57o0u+xLps+PM4UbeeUTKczUwdFulabWuZ10RIaum5pPuv6aNXnFKBnH/8B&lt;/diagram&gt;&lt;/mxfile&gt;"><defs><filter id="dropShadow"><feGaussianBlur in="SourceAlpha" stdDeviation="1.7" result="blur"/><feOffset in="blur" dx="3" dy="3" result="offsetBlur"/><feFlood flood-color="#3D4574" flood-opacity="0.4" result="offsetColor"/><feComposite in="offsetColor" in2="offsetBlur" operator="in" result="offsetBlur"/><feBlend in="SourceGraphic" in2="offsetBlur"/></filter></defs><g filter="url(#dropShadow)"><rect x="0" y="0" width="453" height="2320" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 455px; height: 2320px; padding-top: 0px; margin-left: 0px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 453px; height: 2320px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Controller</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- account: Account<br />- accountDao: AccountDAO<br />- bankAccounts: ArrayList&lt;BankAccount&gt;<br />- card: Card<br />- cartaDAO: CardDAO<br />- collectionDAO: CollectionDAO<br />- collections: ArrayList&lt;Collection&gt;<br />- contoCorrenteDAO: BankAccountDAO<br />- credentialsIban: String<br />- frameBankTransfer: BankTransferViewGUI<br />- frameCard: CardViewGUI<br />- frameCollection: CollectionViewGUI<br />- frameHome: HomeViewGUI<br />- frameLogin: LoginViewGUI<br />- framePickBankAccount: BankAccountPickViewGUI<br />- framePickCollection: CollectionPickViewGUI<br />- framePiggyBank: PiggyBanksViewGUI<br />- frameSignUp: SignUpViewGUI<br />- frameTransaction: TransactionViewGUI<br />~ iconAlert: ImageIcon<br />~ iconCancel: ImageIcon<br />~ iconChecked: ImageIcon<br />~ iconDelete: ImageIcon<br />- piggyBanks: ArrayList&lt;PiggyBank&gt;<br />- report: Double[]<br />- salvadanaioDAO: PiggyBankDAO<br />- selectedBankAccount: BankAccount<br />- selectedCollection: Collection<br />- transactions: ArrayList&lt;Transaction&gt;<br />- transactionsCollection: ArrayList&lt;Transaction&gt;<br />- transazioneDAO: TransactionDAO</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ addCollection(String, String): void<br />+ addPiggyBank(String, double, String): void<br />+ backLoginView(): void<br />+ checkCredentials(String, String): void<br />+ confirmedPassword(String, String): boolean<br />+ deleteBankAccount(String): void<br />+ deleteCollection(String): void<br />+ deletePiggyBank(String): void<br />+ downgradeCard(String): void<br />+ fillPiggyBank(String, String): void<br />+ frameBankTransfer(Boolean): void<br />+ frameCard(Boolean): void<br />+ frameCollection(Boolean): void<br />+ frameHome(Boolean): void<br />+ frameLogin(Boolean): void<br />+ framePickBankAccount(Boolean): void<br />+ framePickCollection(Boolean): void<br />+ framePiggyBank(Boolean): void<br />+ frameSignUp(Boolean): void<br />+ frameTransaction(Boolean): void<br />+ getAccount(): Account<br />+ getBankAccounts(): ArrayList&lt;BankAccount&gt;<br />+ getCard(): Card<br />+ getCollections(): ArrayList&lt;Collection&gt;<br />+ getCredentialsIban(): String<br />+ getMoneyByPiggyBank(String, String, String): void<br />+ getPiggyBanks(): ArrayList&lt;PiggyBank&gt;<br />+ getReport(): Double[]<br />+ getSelectedBankAccount(): BankAccount<br />+ getSelectedCollection(): Collection<br />+ getTransactions(): ArrayList&lt;Transaction&gt;<br />+ getTransactionsCollection(): ArrayList&lt;Transaction&gt;<br />+ insertAccount(String, String, String, String): void<br />+ insertBankAccount(String): Boolean<br />+ pickCollectionByIban(): void<br />+ selectBankAccountByAccount(Account): ArrayList&lt;BankAccount&gt;<br />+ selectNameAndSurnameByIban(String): void<br />+ selectSumOfCollections(String): double<br />+ sendBankTransfer(String, String, String, String, String, String, String, String): void<br />+ setAccount(Account): void<br />+ setBankAccounts(ArrayList&lt;BankAccount&gt;): void<br />+ setCard(Card): void<br />+ setCollections(ArrayList&lt;Collection&gt;): void<br />+ setCredentialsIban(String): void<br />+ setPiggyBanks(ArrayList&lt;PiggyBank&gt;): void<br />+ setReport(Double[]): void<br />+ setSelectedBankAccount(BankAccount): void<br />+ setSelectedCollection(Collection): void<br />+ setTransactions(ArrayList&lt;Transaction&gt;): void<br />+ setTransactionsCollection(ArrayList&lt;Transaction&gt;): void<br />+ showBankTransferView(): void<br />+ showCardView(): void<br />+ showCollectionPickView(): void<br />+ showCollectionView(Collection): void<br />+ showHomeView(BankAccount): void<br />+ showPickBankAccountView(): void<br />+ showPiggyBankView(): void<br />+ showSingUpView(): void<br />+ showTransactionView(): void<br />+ totalMonthlyReceived(BankAccount, String): double<br />+ totalMonthlySent(BankAccount, String): double<br />+ updateBankAccount(BankAccount): void<br />+ upgradeCard(String): void<br />+ viewReport(String): void</p></div></div></div></foreignObject><text x="0" y="14" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">Controller...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>